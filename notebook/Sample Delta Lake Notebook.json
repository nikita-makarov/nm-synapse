{
	"name": "Sample Delta Lake Notebook",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "96333623-dd42-4637-b54a-06d8327ffa2f"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/8a936955-932a-425a-8c07-f6035412c4a1/resourceGroups/rg_synapse/providers/Microsoft.Synapse/workspaces/nmdemosynapse/bigDataPools/sparkpool1",
				"name": "sparkpool1",
				"type": "Spark",
				"endpoint": "https://nmdemosynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://rawdata@nmdemostorage1.dfs.core.windows.net/landing/SQLServer1/Person/person.parquet', format='parquet')\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 29
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.createOrReplaceTempView(\"tmp\")"
				],
				"execution_count": 30
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.columns"
				],
				"execution_count": 34
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"## the logic can be a param\r\n",
					"df2 = spark.sql(\"\"\"\r\n",
					"SELECT\r\n",
					" *\r\n",
					"FROM tmp\r\n",
					"WHERE BusinessEntityID > 2\r\n",
					"\"\"\") \r\n",
					""
				],
				"execution_count": 36
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# write out table as delta\r\n",
					"df2.write.format('delta').save('abfss://curateddata@nmdemostorage1.dfs.core.windows.net/testcurated/person')"
				],
				"execution_count": 37
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE DATABASE IF NOT EXISTS curated"
				],
				"execution_count": 38
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# register external table for ease of access\r\n",
					"db_var = 'curated'\r\n",
					"table_var = 'person'\r\n",
					"destination_file_path_combined_var = 'abfss://curateddata@nmdemostorage1.dfs.core.windows.net/testcurated/person'\r\n",
					"\r\n",
					"spark.sql(\r\n",
					"f\"\"\"\r\n",
					"CREATE TABLE IF NOT EXISTS {db_var}.{table_var}\r\n",
					"--     [ ( col_name1 col_type1 [ COMMENT col_comment1 ], ... ) ]\r\n",
					"    USING DELTA\r\n",
					"--     [ OPTIONS ( key1=val1, key2=val2, ... ) ]\r\n",
					"--     [ PARTITIONED BY ( col_name1, col_name2, ... ) ]\r\n",
					"--     [ CLUSTERED BY ( col_name3, col_name4, ... ) \r\n",
					"--         [ SORTED BY ( col_name [ ASC | DESC ], ... ) ] \r\n",
					"--         INTO num_buckets BUCKETS ]\r\n",
					"    LOCATION '{destination_file_path_combined_var}'\r\n",
					"--     [ COMMENT table_comment ]\r\n",
					"--     [ TBLPROPERTIES ( key1=val1, key2=val2, ... ) ]\r\n",
					"--     [ AS select_statement ]\r\n",
					"\"\"\")"
				],
				"execution_count": 39
			}
		]
	}
}