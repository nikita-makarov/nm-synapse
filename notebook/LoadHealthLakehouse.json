{
	"name": "LoadHealthLakehouse",
	"properties": {
		"folder": {
			"name": "LoadLakeDatabases"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "default",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"conf": {
				"spark.livy.synapse.ipythonInterpreter.enabled": "true"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "python3",
				"display_name": "Python 3.10.0 64-bit"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/trident/default",
				"name": "default",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				}
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"azdata_cell_guid": "bd92c41f-488a-47b3-b0f2-0028ff912ff7",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Health data"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"azdata_cell_guid": "28a7a6e5-c044-4cf3-8331-f6061bedebef",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Diabetes dataset\n",
					"\n",
					"The Diabetes dataset has 442 samples with 10 features, making it ideal for getting started with machine learning algorithms. It's one of the most popular Scikit Learn Toy Datasets."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"azdata_cell_guid": "8e72ac44-04b9-4752-8639-f2b50433c3fe",
					"jupyter": {
						"outputs_hidden": false,
						"source_hidden": false
					},
					"language": "python",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Azure storage access info\n",
					"blob_account_name = \"azureopendatastorage\"\n",
					"blob_container_name = \"mlsamples\"\n",
					"blob_relative_path = \"diabetes\"\n",
					"blob_sas_token = r\"\"\n",
					"\n",
					"# Allow SPARK to read from Blob remotely\n",
					"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
					"spark.conf.set(\n",
					"  'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\n",
					"  blob_sas_token)\n",
					"print('Remote blob path: ' + wasbs_path)\n",
					"\n",
					"# SPARK read parquet, note that it won't load any data yet by now\n",
					"\n",
					"df = spark.read.parquet(wasbs_path)\n",
					"df.write.format(\"delta\").saveAsTable(\"diabetes\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"azdata_cell_guid": "66d991e1-87ec-4eb2-8b4f-b39e692d6e8d",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Bing COVID-19\n",
					"\n",
					"Bing COVID-19 data includes confirmed, fatal, and recovered cases from all regions, updated daily. This data is reflected in the Bing COVID-19 Tracker.\n",
					"\n",
					"Bing collects data from multiple trusted, reliable sources, including the World Health Organization (WHO), Centers for Disease Control and Prevention (CDC), national and state public health departments, BNO News, 24/7 Wall St., and Wikipedia."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"advisor": {
						"adviceMetadata": "{\"artifactId\":\"34e516fb-9e8a-40ac-9778-42165e9aac3f\",\"activityId\":\"a32ae349-2404-45a3-bc20-59ce289cb0f7\",\"applicationId\":\"application_1665739271442_0001\",\"jobGroupId\":\"6\",\"advices\":{\"warn\":1}}"
					},
					"azdata_cell_guid": "4da243db-3730-4434-894a-a496efd7daa7",
					"jupyter": {
						"outputs_hidden": false,
						"source_hidden": false
					},
					"language": "python",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Azure storage access info\n",
					"blob_account_name = \"pandemicdatalake\"\n",
					"blob_container_name = \"public\"\n",
					"blob_relative_path = \"curated/covid-19/bing_covid-19_data/latest/bing_covid-19_data.parquet\"\n",
					"blob_sas_token = r\"\"\n",
					"\n",
					"# Allow SPARK to read from Blob remotely\n",
					"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
					"spark.conf.set(\n",
					"  'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\n",
					"  blob_sas_token)\n",
					"print('Remote blob path: ' + wasbs_path)\n",
					"\n",
					"df = spark.read.parquet(wasbs_path)\n",
					"df.write.format(\"delta\").saveAsTable(\"bing_covid\")\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"azdata_cell_guid": "b7b5aaee-0ab7-43b4-8743-f2b1250db32a",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## European Centre for Disease Prevention and Control (ECDC) COVID-19 Cases\n",
					"\n",
					"The latest available public data on geographic distribution of COVID-19 cases worldwide from the European Center for Disease Prevention and Control (ECDC). Each row/entry contains the number of new cases reported per day and per country or region."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"azdata_cell_guid": "5557f67e-518d-4720-98e2-7ba5ff50b161",
					"jupyter": {
						"outputs_hidden": false,
						"source_hidden": false
					},
					"language": "python",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Azure storage access info\n",
					"blob_account_name = \"pandemicdatalake\"\n",
					"blob_container_name = \"public\"\n",
					"blob_relative_path = \"curated/covid-19/ecdc_cases/latest/ecdc_cases.parquet\"\n",
					"blob_sas_token = r\"\"\n",
					"\n",
					"# Allow SPARK to read from Blob remotely\n",
					"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
					"spark.conf.set(\n",
					"  'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\n",
					"  blob_sas_token)\n",
					"print('Remote blob path: ' + wasbs_path)\n",
					"\n",
					"# SPARK read parquet, note that it won't load any data yet by now\n",
					"df = spark.read.parquet(wasbs_path)\n",
					"df.write.format(\"delta\").saveAsTable(\"ecdc_covid\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"azdata_cell_guid": "7c038bb7-5a59-42c6-aeb8-c04aab873507",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## COVID Tracking project\n",
					"\n",
					"The COVID Tracking Project dataset provides the latest numbers on tests, confirmed cases, hospitalizations, and patient outcomes from every US state and territory."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"azdata_cell_guid": "9ab63895-cf3a-469c-927b-95e3148a7264",
					"jupyter": {
						"outputs_hidden": false,
						"source_hidden": false
					},
					"language": "python",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Azure storage access info\n",
					"blob_account_name = \"pandemicdatalake\"\n",
					"blob_container_name = \"public\"\n",
					"blob_relative_path = \"curated/covid-19/covid_tracking/latest/covid_tracking.parquet\"\n",
					"blob_sas_token = r\"\"\n",
					"\n",
					"# Allow SPARK to read from Blob remotely\n",
					"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
					"spark.conf.set(\n",
					"  'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\n",
					"  blob_sas_token)\n",
					"print('Remote blob path: ' + wasbs_path)\n",
					"\n",
					"# SPARK read parquet, note that it won't load any data yet by now\n",
					"df = spark.read.parquet(wasbs_path)\n",
					"df.write.format(\"delta\").saveAsTable(\"covid_tracking\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"azdata_cell_guid": "3bd26f19-1777-4482-9707-29a503d97f6f",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Oxford COVID-19 Government Response Tracker\n",
					"\n",
					"The Oxford Covid-19 Government Response Tracker (OxCGRT) dataset contains systematic information on which governments have taken which measures, and when."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"azdata_cell_guid": "215a1bb7-34c8-4186-afc8-03d404980851",
					"jupyter": {
						"outputs_hidden": false,
						"source_hidden": false
					},
					"language": "python",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Azure storage access info\n",
					"blob_account_name = \"pandemicdatalake\"\n",
					"blob_container_name = \"public\"\n",
					"blob_relative_path = \"curated/covid-19/covid_policy_tracker/latest/covid_policy_tracker.parquet\"\n",
					"blob_sas_token = r\"\"\n",
					"\n",
					"# Allow SPARK to read from Blob remotely\n",
					"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
					"spark.conf.set(\n",
					"  'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\n",
					"  blob_sas_token)\n",
					"print('Remote blob path: ' + wasbs_path)\n",
					"\n",
					"df = spark.read.parquet(wasbs_path)\n",
					"df.write.format(\"delta\").saveAsTable(\"oxford_covid_tracking\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"azdata_cell_guid": "9aaabcab-7e09-411e-9bea-ca430cc005dc",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Common datasets"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"azdata_cell_guid": "6f46c3c9-51a5-4323-87b6-e9b87dec6662",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Public Holidays\n",
					"\n",
					"Worldwide public holiday data sourced from PyPI holidays package and Wikipedia, covering 38 countries or regions from 1970 to 2099."
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"azdata_cell_guid": "f833d2e4-25fe-49da-b283-764dca14ab44",
					"jupyter": {
						"outputs_hidden": false,
						"source_hidden": false
					},
					"language": "python",
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Azure storage access info\n",
					"blob_account_name = \"azureopendatastorage\"\n",
					"blob_container_name = \"holidaydatacontainer\"\n",
					"blob_relative_path = \"Processed\"\n",
					"blob_sas_token = r\"\"\n",
					"\n",
					"# Allow SPARK to read from Blob remotely\n",
					"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
					"spark.conf.set(\n",
					"  'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\n",
					"  blob_sas_token)\n",
					"print('Remote blob path: ' + wasbs_path)\n",
					"\n",
					"df = spark.read.parquet(wasbs_path)\n",
					"df.write.format(\"delta\").saveAsTable(\"public_holidays\")"
				],
				"execution_count": 16
			},
			{
				"cell_type": "markdown",
				"source": [
					"## US Population by County\n",
					"\n",
					"US population by gender and race for each US county sourced from 2000 and 2010 Decennial Census.\n",
					"\n",
					"This dataset is sourced from United States Census Bureau’s Decennial Census Dataset APIs. Review Terms of Service and Policies and Notices for the terms and conditions related to the use this dataset."
				]
			},
			{
				"cell_type": "code",
				"source": [
					"# Azure storage access info\n",
					"blob_account_name = \"azureopendatastorage\"\n",
					"blob_container_name = \"censusdatacontainer\"\n",
					"blob_relative_path = \"release/us_population_county/\"\n",
					"blob_sas_token = r\"\"\n",
					"\n",
					"# Allow SPARK to read from Blob remotely\n",
					"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
					"spark.conf.set(\n",
					"  'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\n",
					"  blob_sas_token)\n",
					"print('Remote blob path: ' + wasbs_path)\n",
					"\n",
					"df = spark.read.parquet(wasbs_path)\n",
					"df.write.format(\"delta\").saveAsTable(\"us_population_county\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"source": [
					"## US Population by ZIP code\n",
					"\n",
					"US population by gender and race for each US ZIP code sourced from 2000 and 2010 Decennial Census.\n",
					"\n",
					"This dataset is sourced from United States Census Bureau’s Decennial Census Dataset APIs. Review Terms of Service and Policies and Notices for the terms and conditions related to the use this dataset."
				]
			},
			{
				"cell_type": "code",
				"source": [
					"# Azure storage access info\n",
					"blob_account_name = \"azureopendatastorage\"\n",
					"blob_container_name = \"censusdatacontainer\"\n",
					"blob_relative_path = \"release/us_population_zip/\"\n",
					"blob_sas_token = r\"\"\n",
					"\n",
					"# Allow SPARK to read from Blob remotely\n",
					"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)\n",
					"spark.conf.set(\n",
					"  'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\n",
					"  blob_sas_token)\n",
					"print('Remote blob path: ' + wasbs_path)\n",
					"\n",
					"df = spark.read.parquet(wasbs_path)\n",
					"df.write.format(\"delta\").saveAsTable(\"us_population_zip\")\n",
					""
				],
				"execution_count": null
			}
		]
	}
}