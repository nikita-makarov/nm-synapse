{
	"name": "Transform Databricks",
	"properties": {
		"activities": [
			{
				"name": "Transform Data",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/ELT/Transform",
					"baseParameters": {
						"db": {
							"value": "@pipeline().parameters.db",
							"type": "Expression"
						},
						"destination_file_path": {
							"value": "@pipeline().parameters.destination_file_path",
							"type": "Expression"
						},
						"raw_file_path": {
							"value": "@pipeline().parameters.raw_file_path",
							"type": "Expression"
						},
						"table": {
							"value": "@pipeline().parameters.table",
							"type": "Expression"
						},
						"transformation_logic": {
							"value": "@pipeline().parameters.transformation_logic",
							"type": "Expression"
						},
						"destination_container": {
							"value": "@pipeline().parameters.destination_container",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Register in Synapse Lake DB",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "Transform Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "Create External Table",
						"type": "NotebookReference"
					},
					"parameters": {
						"db": {
							"value": {
								"value": "@pipeline().parameters.db",
								"type": "Expression"
							},
							"type": "string"
						},
						"table": {
							"value": {
								"value": "@pipeline().parameters.table",
								"type": "Expression"
							},
							"type": "string"
						},
						"destination_file_path": {
							"value": {
								"value": "@pipeline().parameters.destination_file_path",
								"type": "Expression"
							},
							"type": "string"
						},
						"destination_container": {
							"value": {
								"value": "@pipeline().parameters.destination_container",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": "sparkpool1",
						"type": "BigDataPoolReference"
					},
					"executorSize": "Medium",
					"conf": {
						"spark.dynamicAllocation.enabled": false,
						"spark.dynamicAllocation.minExecutors": 1,
						"spark.dynamicAllocation.maxExecutors": 1
					},
					"driverSize": "Medium",
					"numExecutors": 1
				}
			}
		],
		"parameters": {
			"db": {
				"type": "string",
				"defaultValue": "silver"
			},
			"table": {
				"type": "string",
				"defaultValue": "dim_customer"
			},
			"transformation_logic": {
				"type": "string",
				"defaultValue": "SELECT    `Customer Key` AS CustomerKey   ,`WWI Customer ID` AS WWICustomerID   ,`Customer` AS Customer   ,`Bill To Customer` AS BIllToCustomer   ,`Category` AS Category   ,`Buying Group` AS BuyingGroup   ,`Primary Contact` AS PrimaryContact   ,`Postal Code` AS PostalCode   ,`Valid From` AS ValidFrom   ,`Valid To` AS ValidTo   , current_timestamp() AS ELT_Timestamp FROM file_sql_view"
			},
			"destination_file_path": {
				"type": "string",
				"defaultValue": "/curateddata/silver/wwi-dimcustomer.parquet"
			},
			"raw_file_path": {
				"type": "string",
				"defaultValue": "/mnt/rawdata/WWI/wwi-dimcustomer.csv"
			},
			"destination_container": {
				"type": "string",
				"defaultValue": "curateddata"
			}
		},
		"annotations": []
	}
}