{
	"name": "B1 OnPrem SQL Server to Dedicated Pool",
	"properties": {
		"description": "Using Dedicated SQL Pool stored procedure",
		"activities": [
			{
				"name": "Extract and Load to Staging",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup Info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@concat(\n    'SELECT * FROM '\n    , activity('Lookup Info').output.firstRow.SourceSchema\n    , '.'\n    , activity('Lookup Info').output.firstRow.SourceTable\n    , ' WHERE '\n    , activity('Lookup Info').output.firstRow.SourceWatermarkColumnName\n    , ' > '\n    , ''''\n    , activity('Lookup Info').output.firstRow.Watermark\n    , ''''\n )",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlPoolSink",
						"preCopyScript": {
							"value": "IF EXISTS \n(   SELECT 1 FROM INFORMATION_SCHEMA.TABLES \n    WHERE TABLE_SCHEMA = '@{activity('Lookup Info').output.firstRow.TargetSchema}' AND TABLE_NAME = '@{activity('Lookup Info').output.firstRow.TargetTable}')\nTRUNCATE TABLE @{activity('Lookup Info').output.firstRow.TargetSchema}.@{activity('Lookup Info').output.firstRow.TargetTable}",
							"type": "Expression"
						},
						"allowPolyBase": true,
						"polyBaseSettings": {
							"rejectValue": 0,
							"rejectType": "value",
							"useTypeDefault": true
						},
						"tableOption": "autoCreate"
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "nmdemosynapse-WorkspaceDefaultStorage",
							"type": "LinkedServiceReference"
						}
					}
				},
				"inputs": [
					{
						"referenceName": "OnPremServerTable",
						"type": "DatasetReference",
						"parameters": {
							"Schema": "none",
							"TableName": "none"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SqlPoolTable",
						"type": "DatasetReference",
						"parameters": {
							"SqlPoolSchema": {
								"value": "@activity('Lookup Info').output.firstRow.TargetSchema",
								"type": "Expression"
							},
							"SqlPoolTableName": {
								"value": "@activity('Lookup Info').output.firstRow.TargetTable",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Lookup Info",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlPoolSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM [control].[ControlTable]\nWHERE Id = @{pipeline().parameters.Id}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "SqlPoolTable",
						"type": "DatasetReference",
						"parameters": {
							"SqlPoolSchema": "none",
							"SqlPoolTableName": "none"
						}
					}
				}
			},
			{
				"name": "Lookup New Watermark",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Extract and Load to Staging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlPoolSource",
						"sqlReaderQuery": {
							"value": "SELECT \n    MAX(@{activity('Lookup Info').output.firstRow.SourceWatermarkColumnName}) as WatermarkDate\nFROM @{activity('Lookup Info').output.firstRow.TargetSchema}.@{activity('Lookup Info').output.firstRow.TargetTable}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "SqlPoolTable",
						"type": "DatasetReference",
						"parameters": {
							"SqlPoolSchema": "none",
							"SqlPoolTableName": "none"
						}
					}
				}
			},
			{
				"name": "Update New Watermark",
				"type": "SqlPoolStoredProcedure",
				"dependsOn": [
					{
						"activity": "Lookup New Watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"sqlPool": {
					"referenceName": "SQLPool1",
					"type": "SqlPoolReference"
				},
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark]",
					"storedProcedureParameters": {
						"Id": {
							"value": {
								"value": "@{pipeline().parameters.Id}",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"LastModifiedtime": {
							"value": {
								"value": "@activity('Lookup New Watermark').output.firstRow.WatermarkDate",
								"type": "Expression"
							},
							"type": "DateTime"
						}
					}
				}
			}
		],
		"parameters": {
			"SourceSQLQuery": {
				"type": "string",
				"defaultValue": "SELECT * FROM Production.TransactionHistory"
			},
			"TgtFileSystem": {
				"type": "string",
				"defaultValue": "rawdata"
			},
			"TgtDirectory": {
				"type": "string",
				"defaultValue": "landing/SQLServer1/Production"
			},
			"TgtFilename": {
				"type": "string",
				"defaultValue": "transaction_history.parquet"
			},
			"SourceTableName": {
				"type": "string",
				"defaultValue": "TransactionHistory"
			},
			"SourceSchema": {
				"type": "string",
				"defaultValue": "Production"
			},
			"StgSqlPoolSchema": {
				"type": "string",
				"defaultValue": "staging"
			},
			"StgSqlPoolTableName": {
				"type": "string",
				"defaultValue": "Production_TransactionHistory"
			},
			"SqlPoolSchema": {
				"type": "string",
				"defaultValue": "Production"
			},
			"SqlPoolTableName": {
				"type": "string",
				"defaultValue": "TransactionHistory"
			},
			"FinalStoredProcedureName": {
				"type": "string",
				"defaultValue": "[Production].[load_transaction_history]"
			},
			"Id": {
				"type": "int",
				"defaultValue": 28
			}
		},
		"annotations": []
	}
}